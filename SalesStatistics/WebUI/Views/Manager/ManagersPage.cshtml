@using Application.UseCases.Managers.Queries.GetFilteringManagersWithPagination
@using Application.UseCases.Managers.Queries.GetManagersWithPagination
@model Application.Common.Models.PaginatedList<Application.Common.Models.ManagerDto>

<h2 class="text-center">Managers</h2>
<table class="table">
    <thead>
        <tr>
            <th scope="col">
                @Html.ActionLink("Create manager", "Create", "Manager",
                new { }, new { @class = "btn btn-dark" })
        </th>
        @await Html.PartialAsync("Filter", new GetFilteringManagersWithPaginationQuery())
        <th scope="col"></th>
        </tr>
        <tr>
            <th scope="col">id</th>
            <th scope="col">Last name</th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var manager in Model.Items)
        {
            <tr>
                <td>@manager.Id</td>
                <td>@manager.LastName</td>
                <td>@Html.ActionLink("Edit", "Update", new { manager.Id }, new { @class = "btn btn-dark" })</td>
                <td>@Html.ActionLink("Delete", "Delete", new { manager.Id }, new { @class = "btn btn-dark" })</td>
            </tr>
        }
    </tbody>
</table>

<div>
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("Previous page", "ManagersPage", "Manager",
            new GetManagersWithPaginationQuery { PageNumber = Model.PageNumber - 1 })
    }
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next page", "ManagersPage", "Manager",
            new GetManagersWithPaginationQuery { PageNumber = Model.PageNumber + 1 })
    }
</div>