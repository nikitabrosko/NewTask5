@using Application.UseCases.Managers.Queries.GetFilteringManagersWithPagination
@using Application.UseCases.Managers.Queries.GetManagersWithPagination
@model Application.Common.Models.PaginatedList<Application.Common.Models.ManagerDto>

<h2 class="text-center">Managers</h2>

<table class="table text-center">
    <thead>
        <tr>
            @if (User.Identity.IsAuthenticated)
            {
                if (User.IsInRole("admin"))
                {
                    <th>
                        <button onclick="showInPopup('@Url.Action("Create", "Manager", null, Context.Request.Scheme)', 'Create manager')"
                                class="btn btn-secondary">
                            Create manager
                        </button>
                    </th>
                }
            }
            @await Html.PartialAsync("Filter", new GetFilteringManagersWithPaginationQuery())
        </tr>
    </thead>
</table>

<div id="managers-data">
    @await Html.PartialAsync("ManagersData", Model)
</div>

<div>
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("Previous page", "ManagersPage", "Manager",
            new GetManagersWithPaginationQuery { PageNumber = Model.PageNumber - 1 })
    }
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next page", "ManagersPage", "Manager",
            new GetManagersWithPaginationQuery { PageNumber = Model.PageNumber + 1 })
    }
</div>