@model Application.Common.Models.PaginatedList<UserWithRolesDto>
@using Application.UseCases.Identity.Role.Queries.GetUsersWithRolesWithPagination

<h2 class="text-center">Users And Roles</h2>

<table class="table text-center">
    <thead>
    <tr>
        <th scope="col" hidden>id</th>
        <th scope="col">Role name</th>
        <th scope="col">Roles</th>
        <th scope="col" style="width:150px"></th>
        <th scope="col" style="width:150px"></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var user in Model.Items)
    {
        <tr>
            @Html.Hidden(user.Id)
            <td>@user.Name</td>
            <td>
                @if (user.Roles.Any())
                {
                    @foreach (var userRole in user.Roles)
                    {
                        if (!user.Roles.Last().Equals(userRole))
                        {
                            <b>@userRole, </b>
                        }
                        else
                        {
                            <b>@userRole</b>
                        }
                    }
                }
                else
                {
                    @Html.Label("No Roles")
                }
            </td>
            <td>
                <button onclick="showInPopup('@Url.Action("AddRoleToUser", "Role", new { userId = user.Id },
                                                  Context.Request.Scheme)', 'Add roles')"
                        class="btn btn-info">
                    Add role
                </button>
            </td>
            <td>
                <button onclick="showInPopup('@Url.Action("RemoveRoleFromUser", "Role", new { userId = user.Id },
                                                  Context.Request.Scheme)', 'Remove roles')"
                        class="btn btn-info">
                    Remove role
                </button>
            </td>
        </tr>
    }
    </tbody>
</table>

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">@Html.ActionLink("Previous", "UsersRolesPage", "Role",
                                      new GetUsersWithRolesWithPaginationQuery { PageNumber = Model.PageNumber - 1 }, 
                                      new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">@Html.ActionLink("Previous", "UsersRolesPage", "Role",
                                               new GetUsersWithRolesWithPaginationQuery { PageNumber = Model.PageNumber - 1 }, 
                                               new { @class = "page-link" })
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (Model.PageNumber.Equals(i))
            {
                <li class="page-item active">@Html.ActionLink($"{i}", "UsersRolesPage", "Role",
                                                 new GetUsersWithRolesWithPaginationQuery { PageNumber = i }, 
                                                 new { @class = "page-link" })
                </li>
            }
            else
            {
                <li class="page-item">@Html.ActionLink($"{i}", "UsersRolesPage", "Role",
                                          new GetUsersWithRolesWithPaginationQuery { PageNumber = i }, 
                                          new { @class = "page-link" })
                </li>
            }
        }
        @if (Model.HasNextPage)
        {
            <li class="page-item">@Html.ActionLink("Next", "UsersRolesPage", "Role",
                                      new GetUsersWithRolesWithPaginationQuery { PageNumber = Model.PageNumber + 1 }, 
                                      new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">@Html.ActionLink("Next", "UsersRolesPage", "Role",
                                               new GetUsersWithRolesWithPaginationQuery { PageNumber = Model.PageNumber + 1 },
                                               new { @class = "page-link" })
            </li>
        }
    </ul>
</nav>