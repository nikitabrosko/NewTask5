@model Application.UseCases.Identity.User.Commands.CreateUser.CreateUserCommand

@{
    Layout = null;
}

@await Html.PartialAsync("_StylesImportPartial")

@using (Html.BeginForm("Create", "User", FormMethod.Post, 
    new { @id = "createUserForm", @class = "form-group" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.Label("Name")
        @Html.EditorFor(m => m.Name, new 
        { 
            htmlAttributes = new { required = "true", minlength = "2", maxlength = "40", 
                @class = "form-control", placeholder="Name", type = "text" }
        })
    </div>

    <div class="form-group">
        @Html.Label("Email")
        @Html.EditorFor(m => m.Email, new 
        { 
            htmlAttributes = new { required = "true", minlength = "5", maxlength = "50", 
                @class = "form-control", placeholder="Email", type="email" }
        })
    </div>

    <div class="form-group">
        @Html.Label("Password")
        @Html.EditorFor(m => m.Password, new 
        { 
            htmlAttributes = new { required = "true", minlength = "4", maxlength = "30", 
                @class = "form-control", type="password" }
        })
    </div>

    <div class="form-group">
        @Html.Label("Confirm Password")
        <input type="password" minlength="4" maxlength="30" class="form-control" name="Password_confirmation" 
               id="Password_confirmation" required/>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-dark" style="width: 100%" />
    </div>
}

@await Html.PartialAsync("_ScriptsImportPartial")
@await Html.PartialAsync("_ValidationScriptsPartial")

<script>
    $("#createUserForm").validate({
        rules: {
            Password: "required",
            Password_confirmation: {
                equalTo: "#Password"
            }
        },
        messages: {
            Password_confirmation: {
                equalTo: "Invalid confirmation password!"
            }
        }
    });
</script>